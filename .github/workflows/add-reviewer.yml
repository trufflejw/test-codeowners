name: PR Approval Check

on:
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, reopened, synchronize, review_request_removed]


jobs:
  request-team-review:
    runs-on: ubuntu-latest
    permissions:
      statuses: write
      pull-requests: write
    steps:
      - name: Request team review
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_REVIEW_TOKEN }}
          script: |
            const org = 'trufflejw'
            const team = 'jeffteam';
            const prettyTeamName = `@${org}/${team}`

            function fail(msg) {
              core.setFailed(msg);
              process.exit(1);
            }

            function succeed(msg) {
              core.setOutput(msg);
              process.exit(0);
            }

            let reviews;
            try {
              res = await github.rest.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
              });
              reviews = res.data;
            } catch (error) {
              fail(`⚠️ Could not get reviews: ${error.status}`);
            }

            const approvers = reviews.filter(r => r.state == 'APPROVED').map(r => r.user.login);

            for (const approver of approvers) {
              try {
                const membership = await github.rest.teams.getMembershipForUserInOrg({
                  org: org,
                  team_slug: team,
                  username: approver,
                }).data;

                if (membership.state == 'active') {
                  succeed(`✅ Approved by ${approver} on behalf of ${prettyTeamName}`)
                }
              } catch (error) {
                if (error != 404) {
                  fail(`⚠️ Could not determine membership for ${approver} in ${prettyTeamName}`)
                }
              }
            }

            fail(`⚠️ No approvers found from ${prettyTeamName}`)

